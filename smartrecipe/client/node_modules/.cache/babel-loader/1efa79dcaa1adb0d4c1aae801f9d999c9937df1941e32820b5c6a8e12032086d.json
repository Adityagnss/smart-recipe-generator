{"ast":null,"code":"var _jsxFileName = \"/Users/gadeynagasrisaiaditya/Desktop/Aditya/Thaniya & vyshanvi minor project  /project /smartrecipe/client/src/components/chatbot/Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faRobot, faPaperPlane, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport './Chatbot.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState([{\n    id: 1,\n    text: \"Hi there! I'm your Smart Recipe assistant. Need help or a recipe? I'm here to stir things up!\",\n    sender: 'bot'\n  }]);\n  const [newMessage, setNewMessage] = useState('');\n  const messagesEndRef = useRef(null);\n\n  // Auto-scroll to bottom of messages\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages, isOpen]);\n  const toggleChatbot = () => {\n    setIsOpen(!isOpen);\n  };\n  const handleSendMessage = e => {\n    e.preventDefault();\n    if (newMessage.trim() === '') return;\n\n    // Add user message\n    const userMessage = {\n      id: Date.now(),\n      text: newMessage,\n      sender: 'user'\n    };\n    setMessages([...messages, userMessage]);\n    setNewMessage('');\n\n    // Simulate bot response\n    setTimeout(() => {\n      const botResponse = getBotResponse(newMessage);\n      setMessages(prev => [...prev, {\n        id: Date.now(),\n        text: botResponse,\n        sender: 'bot'\n      }]);\n    }, 1000);\n  };\n  const getBotResponse = userInput => {\n    const input = userInput.toLowerCase();\n    if (input.includes('hello') || input.includes('hi') || input.includes('hey')) {\n      return 'Hello! How can I help you with your cooking today?';\n    }\n    if (input.includes('generate') || input.includes('how') && input.includes('recipe')) {\n      return 'To generate a recipe, go to the Recipe Generator tab. You can either select ingredients from the dropdown or upload a photo of a dish you want to recreate!';\n    }\n    if (input.includes('grocery') || input.includes('shopping list')) {\n      return 'Your grocery list can be managed in the Grocery List tab. You can add items manually or generate a list automatically from any recipe!';\n    }\n    if (input.includes('save') || input.includes('saved recipe')) {\n      return 'To save a recipe, click the Save button on any recipe card. You can access your saved recipes by clicking your profile icon at the top right.';\n    }\n    if (input.includes('calorie') || input.includes('nutrition')) {\n      return 'Calorie information is displayed on each recipe. For more detailed nutritional information, click on the recipe to view its full details!';\n    }\n    if (input.includes('contact') || input.includes('help') || input.includes('support')) {\n      return 'For additional support, please contact our helpline at support@smartrecipe.com or call us at 1-800-RECIPES.';\n    }\n    if (input.includes('thank')) {\n      return \"You're welcome! Happy cooking!\";\n    }\n    return \"I'm not sure I understand. Try asking about recipes, grocery lists, or how to use specific features of the app!\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-window\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"mb-0\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faRobot,\n            className: \"me-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this), \"Recipe Assistant\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"link\",\n          className: \"p-0 text-white\",\n          onClick: toggleChatbot,\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTimes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-messages\",\n        children: [messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.sender}`,\n          children: message.text\n        }, message.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSendMessage,\n        className: \"chatbot-input\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Type your message...\",\n          value: newMessage,\n          onChange: e => setNewMessage(e.target.value),\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faPaperPlane\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"chatbot-toggle\",\n      onClick: toggleChatbot,\n      title: \"Need help or a recipe? I'm here to stir things up!\",\n      children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faRobot\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"GAoKa20fkJInGLYgZebfKnOL1fM=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Button","Form","FontAwesomeIcon","faRobot","faPaperPlane","faTimes","jsxDEV","_jsxDEV","Chatbot","_s","isOpen","setIsOpen","messages","setMessages","id","text","sender","newMessage","setNewMessage","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","toggleChatbot","handleSendMessage","e","preventDefault","trim","userMessage","Date","now","setTimeout","botResponse","getBotResponse","prev","userInput","input","toLowerCase","includes","className","children","icon","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","map","message","ref","onSubmit","Control","type","placeholder","value","onChange","target","autoFocus","title","_c","$RefreshReg$"],"sources":["/Users/gadeynagasrisaiaditya/Desktop/Aditya/Thaniya & vyshanvi minor project  /project /smartrecipe/client/src/components/chatbot/Chatbot.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faRobot, faPaperPlane, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport './Chatbot.css';\n\nconst Chatbot = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState([\n    { \n      id: 1, \n      text: \"Hi there! I'm your Smart Recipe assistant. Need help or a recipe? I'm here to stir things up!\", \n      sender: 'bot' \n    }\n  ]);\n  const [newMessage, setNewMessage] = useState('');\n  const messagesEndRef = useRef(null);\n\n  // Auto-scroll to bottom of messages\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages, isOpen]);\n\n  const toggleChatbot = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const handleSendMessage = (e) => {\n    e.preventDefault();\n    \n    if (newMessage.trim() === '') return;\n    \n    // Add user message\n    const userMessage = {\n      id: Date.now(),\n      text: newMessage,\n      sender: 'user'\n    };\n    \n    setMessages([...messages, userMessage]);\n    setNewMessage('');\n    \n    // Simulate bot response\n    setTimeout(() => {\n      const botResponse = getBotResponse(newMessage);\n      setMessages(prev => [...prev, {\n        id: Date.now(),\n        text: botResponse,\n        sender: 'bot'\n      }]);\n    }, 1000);\n  };\n\n  const getBotResponse = (userInput) => {\n    const input = userInput.toLowerCase();\n    \n    if (input.includes('hello') || input.includes('hi') || input.includes('hey')) {\n      return 'Hello! How can I help you with your cooking today?';\n    }\n    \n    if (input.includes('generate') || input.includes('how') && input.includes('recipe')) {\n      return 'To generate a recipe, go to the Recipe Generator tab. You can either select ingredients from the dropdown or upload a photo of a dish you want to recreate!';\n    }\n    \n    if (input.includes('grocery') || input.includes('shopping list')) {\n      return 'Your grocery list can be managed in the Grocery List tab. You can add items manually or generate a list automatically from any recipe!';\n    }\n    \n    if (input.includes('save') || input.includes('saved recipe')) {\n      return 'To save a recipe, click the Save button on any recipe card. You can access your saved recipes by clicking your profile icon at the top right.';\n    }\n    \n    if (input.includes('calorie') || input.includes('nutrition')) {\n      return 'Calorie information is displayed on each recipe. For more detailed nutritional information, click on the recipe to view its full details!';\n    }\n    \n    if (input.includes('contact') || input.includes('help') || input.includes('support')) {\n      return 'For additional support, please contact our helpline at support@smartrecipe.com or call us at 1-800-RECIPES.';\n    }\n    \n    if (input.includes('thank')) {\n      return \"You're welcome! Happy cooking!\";\n    }\n    \n    return \"I'm not sure I understand. Try asking about recipes, grocery lists, or how to use specific features of the app!\";\n  };\n\n  return (\n    <div className=\"chatbot-container\">\n      {isOpen && (\n        <div className=\"chatbot-window\">\n          <div className=\"chatbot-header\">\n            <h5 className=\"mb-0\">\n              <FontAwesomeIcon icon={faRobot} className=\"me-2\" />\n              Recipe Assistant\n            </h5>\n            <Button \n              variant=\"link\" \n              className=\"p-0 text-white\" \n              onClick={toggleChatbot}\n            >\n              <FontAwesomeIcon icon={faTimes} />\n            </Button>\n          </div>\n          \n          <div className=\"chatbot-messages\">\n            {messages.map(message => (\n              <div \n                key={message.id} \n                className={`message ${message.sender}`}\n              >\n                {message.text}\n              </div>\n            ))}\n            <div ref={messagesEndRef} />\n          </div>\n          \n          <Form onSubmit={handleSendMessage} className=\"chatbot-input\">\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Type your message...\"\n              value={newMessage}\n              onChange={(e) => setNewMessage(e.target.value)}\n              autoFocus\n            />\n            <Button type=\"submit\" variant=\"primary\">\n              <FontAwesomeIcon icon={faPaperPlane} />\n            </Button>\n          </Form>\n        </div>\n      )}\n      \n      <Button \n        className=\"chatbot-toggle\"\n        onClick={toggleChatbot}\n        title=\"Need help or a recipe? I'm here to stir things up!\"\n      >\n        <FontAwesomeIcon icon={faRobot} />\n      </Button>\n    </div>\n  );\n};\n\nexport default Chatbot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}