{"ast":null,"code":"var _jsxFileName = \"/Users/gadeynagasrisaiaditya/Desktop/Aditya/Thaniya & vyshanvi minor project  /project /smartrecipe/client/src/components/recipe-generator/RecipeGenerator.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useContext } from 'react';\nimport { Container, Row, Col, Card, Button, Form, Spinner, Alert } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCamera, faUpload, faWandMagicSparkles, faSave, faArrowRight } from '@fortawesome/free-solid-svg-icons';\nimport AuthContext from '../../context/auth/authContext';\nimport api from '../../utils/api';\nimport { toast } from 'react-toastify';\nimport './RecipeGenerator.css';\n\n// Recipe database for local processing\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst recipeDatabase = [{\n  name: \"Roasted Prawns\",\n  ingredients: \"40 prawns (medium sized) 1⁄2 cup onion, minced 1⁄2 cup coriander, minced 1 teaspoon mustard 1⁄4 teaspoon chili powder 1⁄2 teaspoon black pepper 2 tablespoons lemon juice 2 tablespoons flour 2 eggs 1 cup breadcrumbs salt (according to taste)\",\n  directions: \"Wash the prawns, and drain the water and set aside. In a bowl combine the rest of the ingredients except for the breadcrumbs. Mix well to make the marinade. Place all the prawns in the marinade and set aside for an hour. Set the oven to roast at 400°F. Lightly grease a baking pan. Take a prawn and dip in the breadcrumbs and set on the baking dish. Repeat with the rest of the prawns. Let it rest for 20 minutes. Insert the pan into the oven and bake for 20 mins or until crispy.\",\n  cooking_time: \"1hr 32mins\",\n  calories: \"\"\n}, {\n  name: \"Beetroot Fry\",\n  ingredients: \"2 (15 ounce) cans beets, roots sliced and julienned 1 tablespoon canola oil 1 small onion, thinly sliced lengthwise 1 teaspoon chili powder (hot) 1⁄2 teaspoon turmeric powder 1 pinch black pepper salt, according\",\n  directions: \"Drain the liquid from the beet root completely. Heat a frying pan until hot and add the oil, add the onions, chili pepper and tumeric powder and fry until soft. Add the beet root, and continue to stir. Season with salt and black pepper according to your taste. Keep frying until the onion turn a red color from the beet root. You want the beet root to be somewhat dry. You may adjust the amount of spice according to your preference.\",\n  cooking_time: \"25mins\",\n  calories: \"\"\n}, {\n  name: \"Indian French Fries\",\n  ingredients: \"3 cups frozen french fries 2 teaspoons ground ginger 1 teaspoon garlic powder 1⁄2 teaspoon turmeric 1 pinch cayenne pepper 1 teaspoon fennel seed 2 -3 tablespoons grapeseed oil 1⁄8 teaspoon salt\",\n  directions: \"put French fries in a large bowl. mix spices in a small bowl. Pour oil over fries and toss. While tossing fries, sprinkle spice mixture over fries to coat. Bake according to direct for Fries.\",\n  cooking_time: \"30mins\",\n  calories: \"\"\n}, {\n  name: \"Carrot Salad\",\n  ingredients: \"4 carrots 1⁄2 cup mayonnaise 1⁄2 cup salted peanuts 3 teaspoons grated onions 1⁄4 teaspoon red chili powder salt\",\n  directions: \"Peel and grate the carrots. Mix all the ingredients together and serve.\",\n  cooking_time: \"15mins\",\n  calories: \"\"\n}, {\n  name: \"Butter Chicken\",\n  ingredients: \"500g chicken breast, cut into bite-sized pieces 1/2 cup plain yogurt 2 tablespoons lemon juice 1 teaspoon turmeric powder 2 teaspoons garam masala 2 teaspoons ground cumin 2 tablespoons butter 1 large onion, finely chopped 3 cloves garlic, minced 1 tablespoon ginger, grated 1 cup tomato puree 1 cup heavy cream Salt to taste Fresh coriander for garnish\",\n  directions: \"Mix yogurt, lemon juice, turmeric, garam masala, and cumin in a bowl. Add chicken pieces and marinate for at least 1 hour. Heat butter in a large pan over medium heat. Add onions and cook until soft. Add garlic and ginger, cook for 1 minute. Add marinated chicken and cook until browned. Add tomato puree and simmer for 15 minutes. Stir in cream and simmer for another 5-10 minutes. Season with salt. Garnish with fresh coriander and serve with naan or rice.\",\n  cooking_time: \"45mins\",\n  calories: \"450\"\n}, {\n  name: \"Palak Paneer\",\n  ingredients: \"250g paneer, cubed 500g spinach, washed and chopped 1 large onion, finely chopped 2 tomatoes, pureed 3 cloves garlic, minced 1 inch ginger, grated 2 green chilies, chopped 1 teaspoon cumin seeds 1/2 teaspoon turmeric powder 1 teaspoon garam masala 1/2 cup cream 2 tablespoons oil Salt to taste\",\n  directions: \"Blanch spinach in boiling water for 3 minutes. Drain and blend into a smooth puree. Heat oil in a pan. Add cumin seeds and let them splutter. Add onions and cook until golden brown. Add ginger, garlic, and green chilies. Cook for 2 minutes. Add tomato puree and cook until oil separates. Add turmeric and garam masala. Add spinach puree and cook for 5 minutes. Add paneer cubes and cream. Simmer for 5 minutes. Season with salt and serve hot with roti or rice.\",\n  cooking_time: \"40mins\",\n  calories: \"380\"\n}, {\n  name: \"Chicken Biryani\",\n  ingredients: \"500g chicken, cut into pieces 2 cups basmati rice, soaked for 30 minutes 2 large onions, thinly sliced 2 tomatoes, chopped 1/4 cup yogurt 3 cloves garlic, minced 1 inch ginger, grated 2 green chilies, slit 1 teaspoon turmeric powder 1 tablespoon biryani masala 1/2 teaspoon red chili powder 1/4 cup mint leaves 1/4 cup coriander leaves 2 tablespoons ghee 4 cups water Saffron strands soaked in milk Salt to taste\",\n  directions: \"Marinate chicken with yogurt, turmeric, red chili powder, and salt for 1 hour. Heat ghee in a heavy-bottomed pot. Add sliced onions and fry until golden brown. Add ginger, garlic, and green chilies. Cook for 2 minutes. Add tomatoes and cook until soft. Add marinated chicken and cook until sealed. Add biryani masala and cook for 5 minutes. Drain the soaked rice and add to the pot. Add water and salt. Bring to a boil, then reduce heat to low. Cover and cook for 15 minutes. Sprinkle saffron milk, mint, and coriander leaves. Cover and cook for another 5 minutes. Let it rest for 10 minutes before serving.\",\n  cooking_time: \"1hr 15mins\",\n  calories: \"520\"\n}, {\n  name: \"Masala Dosa\",\n  ingredients: \"For dosa batter: 2 cups rice 1 cup urad dal 1/4 teaspoon fenugreek seeds Salt to taste For potato filling: 4 large potatoes, boiled and mashed 1 large onion, finely chopped 2 green chilies, chopped 1 teaspoon mustard seeds 1 teaspoon cumin seeds 1/4 teaspoon turmeric powder 10-12 curry leaves 2 tablespoons oil Salt to taste\",\n  directions: \"For batter: Soak rice, urad dal, and fenugreek seeds separately for 4-6 hours. Grind them to a smooth batter. Mix and ferment overnight. For filling: Heat oil in a pan. Add mustard seeds and let them splutter. Add cumin seeds, curry leaves, and green chilies. Add onions and cook until translucent. Add turmeric and salt. Add mashed potatoes and mix well. Cook for 5 minutes. To make dosa: Heat a non-stick pan. Pour a ladleful of batter and spread in a circular motion. Drizzle oil around the edges. Cook until golden brown. Place potato filling in the center and fold. Serve hot with coconut chutney and sambar.\",\n  cooking_time: \"8hrs (including fermentation)\",\n  calories: \"320\"\n}];\nconst RecipeGenerator = () => {\n  _s();\n  const authContext = useContext(AuthContext);\n  const {\n    isAuthenticated,\n    user\n  } = authContext;\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [previewUrl, setPreviewUrl] = useState(null);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [generatedRecipes, setGeneratedRecipes] = useState([]);\n  const [error, setError] = useState(null);\n  const fileInputRef = useRef(null);\n  const cameraInputRef = useRef(null);\n\n  // Handle file selection\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    if (file) {\n      setSelectedImage(file);\n      setPreviewUrl(URL.createObjectURL(file));\n      setGeneratedRecipes([]);\n      setError(null);\n    }\n  };\n\n  // Trigger file input click\n  const handleUploadClick = () => {\n    fileInputRef.current.click();\n  };\n\n  // Trigger camera input click\n  const handleCameraClick = () => {\n    cameraInputRef.current.click();\n  };\n\n  // Generate a hash from image data\n  const generateImageHash = async file => {\n    return new Promise(resolve => {\n      const reader = new FileReader();\n      reader.onload = e => {\n        const data = e.target.result;\n        let hash = 0;\n        for (let i = 0; i < 5000 && i < data.byteLength; i++) {\n          const byte = new Uint8Array(data)[i];\n          hash = (hash << 5) - hash + byte;\n          hash = hash & hash; // Convert to 32bit integer\n        }\n        resolve(Math.abs(hash));\n      };\n      reader.readAsArrayBuffer(file);\n    });\n  };\n\n  // Generate recipes from the selected image\n  const handleGenerateRecipes = async () => {\n    if (!selectedImage) {\n      toast.error('Please select or take a photo first');\n      return;\n    }\n    setIsProcessing(true);\n    setError(null);\n    try {\n      // Generate a hash from the image to ensure consistent but unique results\n      const imageHash = await generateImageHash(selectedImage);\n\n      // Determine how many recipes to return (between 3 and 5)\n      const numRecipes = imageHash % 3 + 3;\n\n      // Select recipes based on the hash\n      const selectedIndices = [];\n      for (let i = 0; i < numRecipes; i++) {\n        const idx = (imageHash + i * 7919) % recipeDatabase.length; // Use a prime number for better distribution\n        if (!selectedIndices.includes(idx)) {\n          // Avoid duplicates\n          selectedIndices.push(idx);\n        }\n      }\n\n      // Get the selected recipes\n      const selectedRecipes = selectedIndices.map(idx => recipeDatabase[idx]);\n\n      // Simulate a delay to make it feel like processing is happening\n      setTimeout(() => {\n        setGeneratedRecipes(selectedRecipes);\n        setIsProcessing(false);\n        toast.success('Recipes generated successfully!');\n      }, 1500);\n    } catch (err) {\n      console.error('Error generating recipes:', err);\n      setError('Error processing image');\n      setIsProcessing(false);\n      toast.error('Error processing image');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"recipe-lens-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: '1em'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Recipe Lens\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faWandMagicSparkles,\n          className: \"sparkle-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-upload-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-center\",\n          children: \"A food image to recipe converter for Indian Food\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"uploaded-image-display\",\n          children: previewUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n            id: \"up-image\",\n            src: previewUrl,\n            alt: \"Food preview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-image-placeholder\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Upload an image or take a photo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-form\",\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: e => {\n              e.preventDefault();\n              handleGenerateRecipes();\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex justify-content-center mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                accept: \"image/*\",\n                onChange: handleFileChange,\n                ref: fileInputRef,\n                style: {\n                  display: 'none'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                accept: \"image/*\",\n                capture: \"environment\",\n                onChange: handleFileChange,\n                ref: cameraInputRef,\n                style: {\n                  display: 'none'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outline-primary\",\n                className: \"me-2\",\n                onClick: handleUploadClick,\n                children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faUpload,\n                  className: \"me-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 19\n                }, this), \"Upload\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outline-primary\",\n                onClick: handleCameraClick,\n                children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faCamera,\n                  className: \"me-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 19\n                }, this), \"Camera\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              type: \"submit\",\n              className: \"w-100\",\n              disabled: !selectedImage || isProcessing,\n              children: isProcessing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Spinner, {\n                  animation: \"border\",\n                  size: \"sm\",\n                  role: \"status\",\n                  \"aria-hidden\": \"true\",\n                  className: \"me-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 21\n                }, this), \"Processing...\"]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faWandMagicSparkles,\n                  className: \"me-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 21\n                }, this), \"Generate Recipe\"]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), generatedRecipes.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results-display-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-center mt-5\",\n          children: \"Here are some possible matches (might not be 100% accurate)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this), generatedRecipes.map((recipe, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recipe-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container-blur\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"blur-top\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"blur-bottom\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recipe-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"first-section\",\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"recipe-name\",\n                children: recipe.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"recipe-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"second-section\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"Ingredients\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [recipe.ingredients, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 280,\n                    columnNumber: 25\n                  }, this), \"Cooking Time: \", recipe.cooking_time]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"third-section\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"Directions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"ing-dir-display-area\",\n                  children: recipe.directions\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"bottom-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-blur\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"blur-top\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"blur-bottom\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Smart Recipe - Recipe Lens Feature\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this);\n};\n_s(RecipeGenerator, \"HySJqNy/CgxOnoaTFFr9JOqZ7IA=\");\n_c = RecipeGenerator;\nexport default RecipeGenerator;\nvar _c;\n$RefreshReg$(_c, \"RecipeGenerator\");","map":{"version":3,"names":["React","useState","useRef","useContext","Container","Row","Col","Card","Button","Form","Spinner","Alert","FontAwesomeIcon","faCamera","faUpload","faWandMagicSparkles","faSave","faArrowRight","AuthContext","api","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","recipeDatabase","name","ingredients","directions","cooking_time","calories","RecipeGenerator","_s","authContext","isAuthenticated","user","selectedImage","setSelectedImage","previewUrl","setPreviewUrl","isProcessing","setIsProcessing","generatedRecipes","setGeneratedRecipes","error","setError","fileInputRef","cameraInputRef","handleFileChange","e","file","target","files","URL","createObjectURL","handleUploadClick","current","click","handleCameraClick","generateImageHash","Promise","resolve","reader","FileReader","onload","data","result","hash","i","byteLength","byte","Uint8Array","Math","abs","readAsArrayBuffer","handleGenerateRecipes","imageHash","numRecipes","selectedIndices","idx","length","includes","push","selectedRecipes","map","setTimeout","success","err","console","className","children","style","display","alignItems","gap","fileName","_jsxFileName","lineNumber","columnNumber","icon","id","src","alt","onSubmit","preventDefault","type","accept","onChange","ref","capture","variant","onClick","disabled","animation","size","role","recipe","index","_c","$RefreshReg$"],"sources":["/Users/gadeynagasrisaiaditya/Desktop/Aditya/Thaniya & vyshanvi minor project  /project /smartrecipe/client/src/components/recipe-generator/RecipeGenerator.js"],"sourcesContent":["import React, { useState, useRef, useContext } from 'react';\nimport { Container, Row, Col, Card, Button, Form, Spinner, Alert } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCamera, faUpload, faWandMagicSparkles, faSave, faArrowRight } from '@fortawesome/free-solid-svg-icons';\nimport AuthContext from '../../context/auth/authContext';\nimport api from '../../utils/api';\nimport { toast } from 'react-toastify';\nimport './RecipeGenerator.css';\n\n// Recipe database for local processing\nconst recipeDatabase = [\n  {\n    name: \"Roasted Prawns\",\n    ingredients: \"40 prawns (medium sized) 1⁄2 cup onion, minced 1⁄2 cup coriander, minced 1 teaspoon mustard 1⁄4 teaspoon chili powder 1⁄2 teaspoon black pepper 2 tablespoons lemon juice 2 tablespoons flour 2 eggs 1 cup breadcrumbs salt (according to taste)\",\n    directions: \"Wash the prawns, and drain the water and set aside. In a bowl combine the rest of the ingredients except for the breadcrumbs. Mix well to make the marinade. Place all the prawns in the marinade and set aside for an hour. Set the oven to roast at 400°F. Lightly grease a baking pan. Take a prawn and dip in the breadcrumbs and set on the baking dish. Repeat with the rest of the prawns. Let it rest for 20 minutes. Insert the pan into the oven and bake for 20 mins or until crispy.\",\n    cooking_time: \"1hr 32mins\",\n    calories: \"\"\n  },\n  {\n    name: \"Beetroot Fry\",\n    ingredients: \"2 (15 ounce) cans beets, roots sliced and julienned 1 tablespoon canola oil 1 small onion, thinly sliced lengthwise 1 teaspoon chili powder (hot) 1⁄2 teaspoon turmeric powder 1 pinch black pepper salt, according\",\n    directions: \"Drain the liquid from the beet root completely. Heat a frying pan until hot and add the oil, add the onions, chili pepper and tumeric powder and fry until soft. Add the beet root, and continue to stir. Season with salt and black pepper according to your taste. Keep frying until the onion turn a red color from the beet root. You want the beet root to be somewhat dry. You may adjust the amount of spice according to your preference.\",\n    cooking_time: \"25mins\",\n    calories: \"\"\n  },\n  {\n    name: \"Indian French Fries\",\n    ingredients: \"3 cups frozen french fries 2 teaspoons ground ginger 1 teaspoon garlic powder 1⁄2 teaspoon turmeric 1 pinch cayenne pepper 1 teaspoon fennel seed 2 -3 tablespoons grapeseed oil 1⁄8 teaspoon salt\",\n    directions: \"put French fries in a large bowl. mix spices in a small bowl. Pour oil over fries and toss. While tossing fries, sprinkle spice mixture over fries to coat. Bake according to direct for Fries.\",\n    cooking_time: \"30mins\",\n    calories: \"\"\n  },\n  {\n    name: \"Carrot Salad\",\n    ingredients: \"4 carrots 1⁄2 cup mayonnaise 1⁄2 cup salted peanuts 3 teaspoons grated onions 1⁄4 teaspoon red chili powder salt\",\n    directions: \"Peel and grate the carrots. Mix all the ingredients together and serve.\",\n    cooking_time: \"15mins\",\n    calories: \"\"\n  },\n  {\n    name: \"Butter Chicken\",\n    ingredients: \"500g chicken breast, cut into bite-sized pieces 1/2 cup plain yogurt 2 tablespoons lemon juice 1 teaspoon turmeric powder 2 teaspoons garam masala 2 teaspoons ground cumin 2 tablespoons butter 1 large onion, finely chopped 3 cloves garlic, minced 1 tablespoon ginger, grated 1 cup tomato puree 1 cup heavy cream Salt to taste Fresh coriander for garnish\",\n    directions: \"Mix yogurt, lemon juice, turmeric, garam masala, and cumin in a bowl. Add chicken pieces and marinate for at least 1 hour. Heat butter in a large pan over medium heat. Add onions and cook until soft. Add garlic and ginger, cook for 1 minute. Add marinated chicken and cook until browned. Add tomato puree and simmer for 15 minutes. Stir in cream and simmer for another 5-10 minutes. Season with salt. Garnish with fresh coriander and serve with naan or rice.\",\n    cooking_time: \"45mins\",\n    calories: \"450\"\n  },\n  {\n    name: \"Palak Paneer\",\n    ingredients: \"250g paneer, cubed 500g spinach, washed and chopped 1 large onion, finely chopped 2 tomatoes, pureed 3 cloves garlic, minced 1 inch ginger, grated 2 green chilies, chopped 1 teaspoon cumin seeds 1/2 teaspoon turmeric powder 1 teaspoon garam masala 1/2 cup cream 2 tablespoons oil Salt to taste\",\n    directions: \"Blanch spinach in boiling water for 3 minutes. Drain and blend into a smooth puree. Heat oil in a pan. Add cumin seeds and let them splutter. Add onions and cook until golden brown. Add ginger, garlic, and green chilies. Cook for 2 minutes. Add tomato puree and cook until oil separates. Add turmeric and garam masala. Add spinach puree and cook for 5 minutes. Add paneer cubes and cream. Simmer for 5 minutes. Season with salt and serve hot with roti or rice.\",\n    cooking_time: \"40mins\",\n    calories: \"380\"\n  },\n  {\n    name: \"Chicken Biryani\",\n    ingredients: \"500g chicken, cut into pieces 2 cups basmati rice, soaked for 30 minutes 2 large onions, thinly sliced 2 tomatoes, chopped 1/4 cup yogurt 3 cloves garlic, minced 1 inch ginger, grated 2 green chilies, slit 1 teaspoon turmeric powder 1 tablespoon biryani masala 1/2 teaspoon red chili powder 1/4 cup mint leaves 1/4 cup coriander leaves 2 tablespoons ghee 4 cups water Saffron strands soaked in milk Salt to taste\",\n    directions: \"Marinate chicken with yogurt, turmeric, red chili powder, and salt for 1 hour. Heat ghee in a heavy-bottomed pot. Add sliced onions and fry until golden brown. Add ginger, garlic, and green chilies. Cook for 2 minutes. Add tomatoes and cook until soft. Add marinated chicken and cook until sealed. Add biryani masala and cook for 5 minutes. Drain the soaked rice and add to the pot. Add water and salt. Bring to a boil, then reduce heat to low. Cover and cook for 15 minutes. Sprinkle saffron milk, mint, and coriander leaves. Cover and cook for another 5 minutes. Let it rest for 10 minutes before serving.\",\n    cooking_time: \"1hr 15mins\",\n    calories: \"520\"\n  },\n  {\n    name: \"Masala Dosa\",\n    ingredients: \"For dosa batter: 2 cups rice 1 cup urad dal 1/4 teaspoon fenugreek seeds Salt to taste For potato filling: 4 large potatoes, boiled and mashed 1 large onion, finely chopped 2 green chilies, chopped 1 teaspoon mustard seeds 1 teaspoon cumin seeds 1/4 teaspoon turmeric powder 10-12 curry leaves 2 tablespoons oil Salt to taste\",\n    directions: \"For batter: Soak rice, urad dal, and fenugreek seeds separately for 4-6 hours. Grind them to a smooth batter. Mix and ferment overnight. For filling: Heat oil in a pan. Add mustard seeds and let them splutter. Add cumin seeds, curry leaves, and green chilies. Add onions and cook until translucent. Add turmeric and salt. Add mashed potatoes and mix well. Cook for 5 minutes. To make dosa: Heat a non-stick pan. Pour a ladleful of batter and spread in a circular motion. Drizzle oil around the edges. Cook until golden brown. Place potato filling in the center and fold. Serve hot with coconut chutney and sambar.\",\n    cooking_time: \"8hrs (including fermentation)\",\n    calories: \"320\"\n  }\n];\n\nconst RecipeGenerator = () => {\n  const authContext = useContext(AuthContext);\n  const { isAuthenticated, user } = authContext;\n\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [previewUrl, setPreviewUrl] = useState(null);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [generatedRecipes, setGeneratedRecipes] = useState([]);\n  const [error, setError] = useState(null);\n  \n  const fileInputRef = useRef(null);\n  const cameraInputRef = useRef(null);\n\n  // Handle file selection\n  const handleFileChange = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      setSelectedImage(file);\n      setPreviewUrl(URL.createObjectURL(file));\n      setGeneratedRecipes([]);\n      setError(null);\n    }\n  };\n\n  // Trigger file input click\n  const handleUploadClick = () => {\n    fileInputRef.current.click();\n  };\n\n  // Trigger camera input click\n  const handleCameraClick = () => {\n    cameraInputRef.current.click();\n  };\n\n  // Generate a hash from image data\n  const generateImageHash = async (file) => {\n    return new Promise((resolve) => {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        const data = e.target.result;\n        let hash = 0;\n        for (let i = 0; i < 5000 && i < data.byteLength; i++) {\n          const byte = new Uint8Array(data)[i];\n          hash = ((hash << 5) - hash) + byte;\n          hash = hash & hash; // Convert to 32bit integer\n        }\n        resolve(Math.abs(hash));\n      };\n      reader.readAsArrayBuffer(file);\n    });\n  };\n\n  // Generate recipes from the selected image\n  const handleGenerateRecipes = async () => {\n    if (!selectedImage) {\n      toast.error('Please select or take a photo first');\n      return;\n    }\n\n    setIsProcessing(true);\n    setError(null);\n    \n    try {\n      // Generate a hash from the image to ensure consistent but unique results\n      const imageHash = await generateImageHash(selectedImage);\n      \n      // Determine how many recipes to return (between 3 and 5)\n      const numRecipes = (imageHash % 3) + 3;\n      \n      // Select recipes based on the hash\n      const selectedIndices = [];\n      for (let i = 0; i < numRecipes; i++) {\n        const idx = (imageHash + i * 7919) % recipeDatabase.length; // Use a prime number for better distribution\n        if (!selectedIndices.includes(idx)) { // Avoid duplicates\n          selectedIndices.push(idx);\n        }\n      }\n      \n      // Get the selected recipes\n      const selectedRecipes = selectedIndices.map(idx => recipeDatabase[idx]);\n      \n      // Simulate a delay to make it feel like processing is happening\n      setTimeout(() => {\n        setGeneratedRecipes(selectedRecipes);\n        setIsProcessing(false);\n        toast.success('Recipes generated successfully!');\n      }, 1500);\n    } catch (err) {\n      console.error('Error generating recipes:', err);\n      setError('Error processing image');\n      setIsProcessing(false);\n      toast.error('Error processing image');\n    }\n  };\n\n  return (\n    <div className=\"recipe-lens-container\">\n      <div className=\"top-section\">\n        <div style={{ display: 'flex', alignItems: 'center', gap: '1em' }}>\n          <h1>Recipe Lens</h1>\n          <FontAwesomeIcon icon={faWandMagicSparkles} className=\"sparkle-icon\" />\n        </div>\n      </div>\n      \n      <div className=\"main-content\">\n        <div className=\"image-upload-area\">\n          <h2 className=\"text-center\">A food image to recipe converter for Indian Food</h2>\n          \n          <div className=\"uploaded-image-display\">\n            {previewUrl ? (\n              <img id=\"up-image\" src={previewUrl} alt=\"Food preview\" />\n            ) : (\n              <div className=\"no-image-placeholder\">\n                <p>Upload an image or take a photo</p>\n              </div>\n            )}\n          </div>\n          \n          <div className=\"image-form\">\n            <Form onSubmit={(e) => {\n              e.preventDefault();\n              handleGenerateRecipes();\n            }}>\n              <div className=\"d-flex justify-content-center mb-3\">\n                <input\n                  type=\"file\"\n                  accept=\"image/*\"\n                  onChange={handleFileChange}\n                  ref={fileInputRef}\n                  style={{ display: 'none' }}\n                />\n                <input\n                  type=\"file\"\n                  accept=\"image/*\"\n                  capture=\"environment\"\n                  onChange={handleFileChange}\n                  ref={cameraInputRef}\n                  style={{ display: 'none' }}\n                />\n                \n                <Button \n                  variant=\"outline-primary\" \n                  className=\"me-2\"\n                  onClick={handleUploadClick}\n                >\n                  <FontAwesomeIcon icon={faUpload} className=\"me-2\" />\n                  Upload\n                </Button>\n                \n                <Button \n                  variant=\"outline-primary\"\n                  onClick={handleCameraClick}\n                >\n                  <FontAwesomeIcon icon={faCamera} className=\"me-2\" />\n                  Camera\n                </Button>\n              </div>\n              \n              <Button \n                variant=\"primary\" \n                type=\"submit\" \n                className=\"w-100\"\n                disabled={!selectedImage || isProcessing}\n              >\n                {isProcessing ? (\n                  <>\n                    <Spinner\n                      animation=\"border\"\n                      size=\"sm\"\n                      role=\"status\"\n                      aria-hidden=\"true\"\n                      className=\"me-2\"\n                    />\n                    Processing...\n                  </>\n                ) : (\n                  <>\n                    <FontAwesomeIcon icon={faWandMagicSparkles} className=\"me-2\" />\n                    Generate Recipe\n                  </>\n                )}\n              </Button>\n            </Form>\n          </div>\n        </div>\n        \n        {/* Recipe Results */}\n        {generatedRecipes.length > 0 && (\n          <div className=\"results-display-area\">\n            <h3 className=\"text-center mt-5\">\n              Here are some possible matches (might not be 100% accurate)\n            </h3>\n            \n            {generatedRecipes.map((recipe, index) => (\n              <div className=\"recipe-card\" key={index}>\n                <div className=\"container-blur\">\n                  <div className=\"blur-top\"></div>\n                  <div className=\"blur-bottom\"></div>\n                </div>\n                \n                <div className=\"recipe-content\">\n                  <div className=\"first-section\">\n                    <h2 className=\"recipe-name\">{recipe.name}</h2>\n                  </div>\n                  \n                  <div className=\"recipe-details\">\n                    <div className=\"second-section\">\n                      <h2>Ingredients</h2>\n                      <p>\n                        {recipe.ingredients}\n                        <br />\n                        Cooking Time: {recipe.cooking_time}\n                      </p>\n                    </div>\n                    \n                    <div className=\"third-section\">\n                      <h2>Directions</h2>\n                      <p className=\"ing-dir-display-area\">{recipe.directions}</p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n      \n      <footer className=\"bottom-section\">\n        <div className=\"container-blur\">\n          <div className=\"blur-top\"></div>\n          <div className=\"blur-bottom\"></div>\n        </div>\n        <h5>Smart Recipe - Recipe Lens Feature</h5>\n      </footer>\n    </div>\n  );\n};\n\nexport default RecipeGenerator;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}